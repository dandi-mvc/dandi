{
  "extends": ["plugin:@typescript-eslint/recommended"],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "import", "mocha", "prettier"],
  "parserOptions": {
    "ecmaVersion": 8
  },
  "env": {
    "es6": true
  },
  "overrides": [
    {
      "files": ["*.js"],
      "env": {
        "commonjs": true,
        "node": true
      },
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["**/src/**/*.*spec.ts", "**/test/**/*.ts"],
      "rules": {
        "mocha/no-exclusive-tests": "error",
        "no-magic-numbers": "off",
        "no-invalid-this": "off",
        "no-new": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-use-before-define": "off"
      }
    },
    {
      "files": ["**/src/**/*.ts", "**/test/**/*.ts", "_examples/*/**/*.ts"],
      "parserOptions": {
        "sourceType": "module"
      },
      "rules": {
        "indent": "off",
        "new-cap": "off",
        "no-dupe-class-members": "off",
        "no-undef": "off",
        "no-unused-vars": "off"
      }
    },
    {
      "files": ["test/**/*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["**/*.ts"],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off"
      }
    }
  ],
  "rules": {
    "array-bracket-newline": ["error", "consistent"],
    "block-spacing": ["error", "always"],
    "brace-style": ["error", "1tbs"],
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "curly": ["error", "all"],
    "eqeqeq": ["error", "always"],
    "eol-last": ["error", "always"],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "max-statements-per-line": [
      "error",
      {
        "max": 1
      }
    ],
    "multiline-ternary": ["error", "always-multiline"],
    "new-cap": [
      "error",
      {
        "newIsCap": true,
        "capIsNew": true,
        "properties": true
      }
    ],
    "new-parens": ["error"],
    "no-array-constructor": ["error"],
    "no-console": ["off"],
    "no-dupe-args": "off",
    // doesn't play nice with decorators in constructors
    "no-else-return": [
      "error",
      {
        "allowElseIf": false
      }
    ],
    "no-invalid-this": ["error"],
    "no-magic-numbers": [
      "error",
      {
        "ignoreArrayIndexes": true,
        "enforceConst": true,
        "detectObjects": true,
        "ignore": [0, 1, -1]
      }
    ],
    "no-multi-spaces": [
      "error",
      {
        "exceptions": {
          "ImportDeclaration": true,
          "VariableDeclarator": true
        }
      }
    ],
    "no-new": ["error"],
    "no-new-func": ["error"],
    "no-lonely-if": ["error"],
    "no-multi-assign": ["error"],
    "no-redeclare": "off",
    // doesn't play nice with decorators in constructors
    "no-unneeded-ternary": ["error"],
    "no-var": ["error"],
    "no-whitespace-before-property": ["error"],
    "object-curly-newline": [
      "error",
      {
        "multiline": true,
        "consistent": true
      }
    ],
    "one-var-declaration-per-line": ["error", "initializations"],
    "prefer-const": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "rest-spread-spacing": ["error", "never"],
    "semi": ["error", "never"],
    "space-in-parens": ["error", "never"],
    "spaced-comment": ["error", "always"],
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": false
        },
        "groups": ["builtin", "external", "internal", "parent", "index", "sibling", "object"],
        "pathGroups": [
          {
            "pattern": "@dandi/**",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "@dandi-contrib/**",
            "group": "builtin",
            "position": "after"
          }
        ],
        "newlines-between": "always-and-inside-groups"
      }
    ],
    "@typescript-eslint/ban-types": ["off"],
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/indent": ["off"],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "none"
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      { "selector": "typeParameter", "format": ["PascalCase"], "prefix": ["T"] }
    ],
    "@typescript-eslint/no-extra-semi": ["off"],
    "@typescript-eslint/no-inferrable-types": ["off"],
    "@typescript-eslint/no-unused-vars": ["error"],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": false,
        "variables": true,
        "enums": true
      }
    ],
    "@typescript-eslint/semi": ["error", "never"]
  }
}
